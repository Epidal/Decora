<!--
Name: Onyx
Author: Yamachi
URL: http://board.thedivinityproject.com
Date: 04/03/2011
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Microsoft_Windows_Controls_Chromes="clr-namespace:Microsoft.Windows.Controls.Chromes;assembly=WPFToolkit.Extended" xmlns:System="clr-namespace:System;assembly=mscorlib" mc:Ignorable="d">
	
	<ItemsPanelTemplate x:Key="ItemsPanelTemplate_Performance">
		<VirtualizingStackPanel IsItemsHost="True"/>
	</ItemsPanelTemplate>
	
	<!-- BRUSHES -->
	
		<!-- Button (Hover) -->
		<LinearGradientBrush x:Key="ButtonBackgroundHover" StartPoint="0.5,0" EndPoint="0.5,1">
			<GradientStop Offset="0" Color="#FF484848"/>
			<GradientStop Offset="0.45" Color="#FF292929"/>		
			<GradientStop Offset="0.45" Color="#FF272727"/>
			<GradientStop Offset="1" Color="#FF262626"/>
		</LinearGradientBrush>
	
		<LinearGradientBrush x:Key="ButtonBorderHover" StartPoint="0.5,0" EndPoint="0.5,1">
			<GradientStop Offset="0" Color="#FF6B6B6B"/>
			<GradientStop Offset="0.5" Color="#FF505050"/>		
			<GradientStop Offset="0.5" Color="#FF4E4E4E"/>
			<GradientStop Offset="1" Color="#FF4D4D4D"/>
		</LinearGradientBrush>
		
		<!-- Button (Pressed) -->	
		<LinearGradientBrush x:Key="ButtonBackgroundPressed" StartPoint="0.5,0" EndPoint="0.5,1">
			<GradientStop Offset="0" Color="#FF646464"/>
			<GradientStop Offset="0.45" Color="#FF2E2E2E"/>		
			<GradientStop Offset="0.45" Color="#FF272727"/>
			<GradientStop Offset="1" Color="#FF262626"/>
		</LinearGradientBrush>
	
		<LinearGradientBrush x:Key="ButtonBorderPressed" StartPoint="0.5,0" EndPoint="0.5,1">
			<GradientStop Offset="0" Color="#FF838383"/>
			<GradientStop Offset="0.5" Color="#FF535353"/>		
			<GradientStop Offset="0.5" Color="#FF4E4E4E"/>
			<GradientStop Offset="1" Color="#FF4D4D4D"/>
		</LinearGradientBrush>
	
	<!-- END BRUSHES -->
	
	<!-- ANIMATIONS -->
	
		<Storyboard x:Key="HoverIn">
			<DoubleAnimation x:Name="AnimHoverIn"
							 BeginTime="00:00:00"
							 Storyboard.TargetName="BackgroundHover"
							 Duration="00:00:00.125"
							 From="0" To="1"
							 Storyboard.TargetProperty="Opacity"/>
		</Storyboard>
		
		<Storyboard x:Key="HoverOut">
			<DoubleAnimation x:Name="AnimHoverOut"
							 BeginTime="00:00:00"
							 Storyboard.TargetName="BackgroundHover"
							 Duration="00:00:00.125"
							 From="1" To="0"
							 Storyboard.TargetProperty="Opacity"/>
		</Storyboard>
		
		<Storyboard x:Key="PressedIn">
			<DoubleAnimation x:Name="AnimPressedIn"
							 BeginTime="00:00:00"
							 Storyboard.TargetName="BackgroundPressed"
							 Duration="00:00:00.075"
							 From="0" To="1"
							 Storyboard.TargetProperty="Opacity"/>
		</Storyboard>
		
		<Storyboard x:Key="PressedOut">
			<DoubleAnimation x:Name="AnimPressedOut"
							 BeginTime="00:00:00"
							 Storyboard.TargetName="BackgroundPressed"
							 Duration="00:00:00.075"
							 From="1" To="0"
							 Storyboard.TargetProperty="Opacity"/>
		</Storyboard>
	
	<!-- END ANIMATIONS -->
	
	<!-- CONTROL STYLES -->
	
		<!-- TextBox -->
		<Style TargetType="{x:Type TextBox}">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="Foreground" Value="#FF808080" />
			<Setter Property="Background" Value="#FF161616" />
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="CaretBrush">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
						<GradientStop Color="#6FFFFFFF" Offset="0"/>
						<GradientStop Color="#00FFFFFF" Offset="1"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<Border x:Name="Border" 
								CornerRadius="6" 
								BorderBrush="#FF1A1A1A" 
								Opacity="1" 
								BorderThickness="1">
							<Border x:Name="Background"
									BorderBrush="#FF3D3D3D"
									BorderThickness="1" 
									Background="{TemplateBinding Background}" 
									CornerRadius="4.5"
									Padding="2">
								<ScrollViewer x:Name="PART_ContentHost"/>
							</Border>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsReadOnly" Value="True">
								<Setter Property="Background" Value="#FF2A2A2A" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Background" Value="#FF2A2A2A" />
								<Setter Property="Foreground" Value="#00000000"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	
		<!-- Button -->
		<Style TargetType="{x:Type Button}">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="Foreground" Value="#FFABABAB" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Border x:Name="Background"
									BorderBrush="#FF3D3D3D"
									BorderThickness="1" 
									Background="#FF262626" 
									CornerRadius="4.5"
									Margin="1"/>
							<Border x:Name="BackgroundHover" 
									BorderBrush="{StaticResource ButtonBorderHover}"
									BorderThickness="1" 
									Background="{StaticResource ButtonBackgroundHover}" 
									CornerRadius="4.5"
									Margin="1"
									Opacity="0"/>
							<Border x:Name="BackgroundPressed" 
									BorderBrush="{StaticResource ButtonBorderPressed}"
									BorderThickness="1" 
									Background="{StaticResource ButtonBackgroundPressed}" 
									CornerRadius="4.5"
									Margin="1"
									Opacity="0"/>
							<Border x:Name="Border" 
									CornerRadius="6" 
									BorderBrush="#FF1A1A1A" 
									Opacity="1" 
									BorderThickness="1"/>
							<ContentPresenter x:Name="ContentBlur"
											  Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" 
											  HorizontalAlignment="center" 
											  VerticalAlignment="center"
											  Margin="6, 2, 6, 5">
								<ContentPresenter.Effect>
									<BlurEffect Radius="8"/>		
								</ContentPresenter.Effect>
							</ContentPresenter>
							<ContentPresenter x:Name="Content"
											  Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" 
											  HorizontalAlignment="center" 
											  VerticalAlignment="center"
											  Margin="6, 2, 6, 5"/>
						</Grid>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="UIElement.MouseEnter">
								<BeginStoryboard Storyboard="{StaticResource HoverIn}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="UIElement.MouseLeave">
								<BeginStoryboard Storyboard="{StaticResource HoverOut}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonDown">
								<BeginStoryboard Storyboard="{StaticResource PressedIn}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonUp">
								<BeginStoryboard Storyboard="{StaticResource PressedOut}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="UIElement.GotFocus">
								<BeginStoryboard Storyboard="{StaticResource HoverIn}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="UIElement.LostFocus">
								<BeginStoryboard Storyboard="{StaticResource HoverOut}"/>
							</EventTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" TargetName="Content" Value=".3"/>
								<Setter Property="Opacity" TargetName="Border" Value=".5"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter> 
		</Style>
		
		<Style TargetType="{x:Type ListBox}">
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>			
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="Foreground" Value="#FF808080" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBox}">
						<Border x:Name="Border" 
								CornerRadius="6" 
								BorderBrush="#FF1A1A1A" 
								Opacity="1" 
								BorderThickness="1">
							<Border x:Name="Background"
									BorderBrush="#FF3D3D3D"
									BorderThickness="1" 
									Background="#FF161616" 
									CornerRadius="4.5">
								<ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}">
									<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</ScrollViewer>
							</Border>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsGrouping" Value="True">
								<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		<Style TargetType="{x:Type ScrollBar}">
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
			<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid Background="{TemplateBinding Background}">
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
								<RowDefinition Height="1E-05*"/>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
							</Grid.RowDefinitions>
							<Viewbox Stretch="Fill">
								<RepeatButton Content="M 0 4 L 7 4 L 3.5 0 Z" Command="ScrollBar.LineUpCommand" Height="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
									<RepeatButton.Style>
										<Style TargetType="{x:Type RepeatButton}">
											<Setter Property="OverridesDefaultStyle" Value="True"/>
											<Setter Property="Foreground" Value="#FFC0C0C0"/>
											<Setter Property="MinWidth" Value="0"/>
											<Setter Property="MinHeight" Value="0"/>
											<Setter Property="IsTabStop" Value="False"/>
											<Setter Property="Focusable" Value="False"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type RepeatButton}">
														<Border x:Name="Border"
																BorderBrush="#FF242424"
																BorderThickness="1" 
																Background="#FF303030" 
																CornerRadius="0 3.5 0 0">
															<Path Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
														</Border>
														<ControlTemplate.Triggers>
															<Trigger Property="IsPressed" Value="True">
																<Setter Property="Background" TargetName="Border" Value="#FF404040"/>
																<Setter Property="BorderBrush" TargetName="Border" Value="#FF505050"/>
															</Trigger>
															<Trigger Property="IsEnabled" Value="False">
																<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
															</Trigger>
														</ControlTemplate.Triggers>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</RepeatButton.Style>
								</RepeatButton>
							</Viewbox>
							<Rectangle Grid.Row="1">
								<Rectangle.Fill>
									<SolidColorBrush Color="#FF161616" Opacity="0.5"/>
								</Rectangle.Fill>
							</Rectangle>
							<Track x:Name="PART_Track" IsDirectionReversed="True" Grid.Row="1">
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="ScrollBar.PageUpCommand">
										<RepeatButton.Style>
											<Style TargetType="{x:Type RepeatButton}">
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="IsTabStop" Value="False"/>
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
												<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type RepeatButton}">
															<Rectangle x:Name="PageButtonBackground" Fill="Transparent"/>
															<ControlTemplate.Triggers>
																<Trigger Property="IsPressed" Value="True">
																	<Setter Property="Fill" TargetName="PageButtonBackground" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</RepeatButton.Style>
									</RepeatButton>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="ScrollBar.PageDownCommand">
										<RepeatButton.Style>
											<Style TargetType="{x:Type RepeatButton}">
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="IsTabStop" Value="False"/>
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
												<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type RepeatButton}">
															<Rectangle x:Name="PageButtonBackground" Fill="Transparent"/>
															<ControlTemplate.Triggers>
																<Trigger Property="IsPressed" Value="True">
																	<Setter Property="Fill" TargetName="PageButtonBackground" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</RepeatButton.Style>
									</RepeatButton>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb>
										<Thumb.Style>
											<Style TargetType="{x:Type Thumb}">
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Thumb}">
															<Border x:Name="Border"
																	BorderBrush="#FF121212"
																	BorderThickness="1"
																	CornerRadius="3.5"
																	Margin="2 0 2 0">
																<Border.Background>
																	<LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
																		<GradientStop Offset="0" Color="#FF484848"/>
																		<GradientStop Offset="0.45" Color="#FF292929"/>		
																		<GradientStop Offset="0.45" Color="#FF272727"/>
																		<GradientStop Offset="1" Color="#FF262626"/>
																	</LinearGradientBrush>
																</Border.Background>
															</Border>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</Thumb.Style>
									</Thumb>
								</Track.Thumb>
							</Track>
							<Viewbox Grid.Row="2" Stretch="Fill">
								<RepeatButton Content="M 0 0 L 3.5 4 L 7 0 Z" Command="ScrollBar.LineDownCommand" Height="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
									<RepeatButton.Style>
										<Style TargetType="{x:Type RepeatButton}">
											<Setter Property="OverridesDefaultStyle" Value="True"/>
											<Setter Property="Foreground" Value="#FFC0C0C0"/>
											<Setter Property="MinWidth" Value="0"/>
											<Setter Property="MinHeight" Value="0"/>
											<Setter Property="IsTabStop" Value="False"/>
											<Setter Property="Focusable" Value="False"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type RepeatButton}">
														<Border x:Name="Border"
																BorderBrush="#FF242424"
																BorderThickness="1" 
																Background="#FF303030" 
																CornerRadius="0 0 3.5 0">
															<Path Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
														</Border>
														<ControlTemplate.Triggers>
															<Trigger Property="IsPressed" Value="True">
																<Setter Property="Background" TargetName="Border" Value="#FF404040"/>
																<Setter Property="BorderBrush" TargetName="Border" Value="#FF505050"/>
															</Trigger>
															<Trigger Property="IsEnabled" Value="False">
																<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
															</Trigger>
														</ControlTemplate.Triggers>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</RepeatButton.Style>
								</RepeatButton>
							</Viewbox>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Horizontal">
					<Setter Property="Width" Value="Auto"/>
					<Setter Property="MinWidth" Value="0"/>
					<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
					<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ScrollBar}">
								<Grid Background="{TemplateBinding Background}">
									<Grid.ColumnDefinitions>
										<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
										<ColumnDefinition Width="1E-05*"/>
										<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
									</Grid.ColumnDefinitions>
									<Viewbox Stretch="Fill">
								<RepeatButton Content="M 0 4 L 4 8 L 4 0 Z" Command="ScrollBar.LineLeftCommand" Height="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
									<RepeatButton.Style>
										<Style TargetType="{x:Type RepeatButton}">
											<Setter Property="OverridesDefaultStyle" Value="True"/>
											<Setter Property="Foreground" Value="#FFC0C0C0"/>
											<Setter Property="MinWidth" Value="0"/>
											<Setter Property="MinHeight" Value="0"/>
											<Setter Property="IsTabStop" Value="False"/>
											<Setter Property="Focusable" Value="False"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type RepeatButton}">
														<Border x:Name="Border"
																BorderBrush="#FF242424"
																BorderThickness="1" 
																Background="#FF303030" 
																CornerRadius="0 0 0 3.5">
															<Path Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
														</Border>
														<ControlTemplate.Triggers>
															<Trigger Property="IsPressed" Value="True">
																<Setter Property="Background" TargetName="Border" Value="#FF404040"/>
																<Setter Property="BorderBrush" TargetName="Border" Value="#FF505050"/>
															</Trigger>
															<Trigger Property="IsEnabled" Value="False">
																<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
															</Trigger>
														</ControlTemplate.Triggers>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</RepeatButton.Style>
								</RepeatButton>
							</Viewbox>
									<Rectangle Grid.Column="1">
								<Rectangle.Fill>
									<SolidColorBrush Color="#FF161616" Opacity="0.5"/>
								</Rectangle.Fill>
							</Rectangle>
									<Track x:Name="PART_Track" Grid.Column="1">
										<Track.DecreaseRepeatButton>
											<RepeatButton Command="ScrollBar.PageLeftCommand">
												<RepeatButton.Style>
											<Style TargetType="{x:Type RepeatButton}">
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="IsTabStop" Value="False"/>
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
												<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type RepeatButton}">
															<Rectangle x:Name="PageButtonBackground" Fill="Transparent"/>
															<ControlTemplate.Triggers>
																<Trigger Property="IsPressed" Value="True">
																	<Setter Property="Fill" TargetName="PageButtonBackground" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</RepeatButton.Style>
											</RepeatButton>
										</Track.DecreaseRepeatButton>
										<Track.IncreaseRepeatButton>
											<RepeatButton Command="ScrollBar.PageRightCommand">
												<RepeatButton.Style>
													<Style TargetType="{x:Type RepeatButton}">
														<Setter Property="OverridesDefaultStyle" Value="True"/>
														<Setter Property="IsTabStop" Value="False"/>
														<Setter Property="Focusable" Value="False"/>
														<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
														<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type RepeatButton}">
																	<Rectangle x:Name="PageButtonBackground" Fill="Transparent"/>
																	<ControlTemplate.Triggers>
																		<Trigger Property="IsPressed" Value="True">
																			<Setter Property="Fill" TargetName="PageButtonBackground" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
																		</Trigger>
																	</ControlTemplate.Triggers>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</RepeatButton.Style>
											</RepeatButton>
										</Track.IncreaseRepeatButton>
										<Track.Thumb>
											<Thumb>
												<Thumb.Style>
													<Style TargetType="{x:Type Thumb}">
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type Thumb}">
																	<Border x:Name="Border"
																	BorderBrush="#FF121212"
																	BorderThickness="1" 
																	Background="{StaticResource ButtonBackgroundHover}" 
																	CornerRadius="3.5"
																	Margin="0 2 0 2"/>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</Thumb.Style>
											</Thumb>
										</Track.Thumb>
									</Track>
									<Viewbox Grid.Column="2" Stretch="Fill">
										<RepeatButton Content="M 0 0 L 0 8 L 4 4 Z" Command="ScrollBar.LineRightCommand" MinHeight="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" Width="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}">
											<RepeatButton.Style>
										<Style TargetType="{x:Type RepeatButton}">
											<Setter Property="OverridesDefaultStyle" Value="True"/>
											<Setter Property="Foreground" Value="#FFC0C0C0"/>
											<Setter Property="MinWidth" Value="0"/>
											<Setter Property="MinHeight" Value="0"/>
											<Setter Property="IsTabStop" Value="False"/>
											<Setter Property="Focusable" Value="False"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type RepeatButton}">
														<Border x:Name="Border"
																BorderBrush="#FF242424"
																BorderThickness="1" 
																Background="#FF303030" 
																CornerRadius="0 0 3.5 0">
															<Path Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
														</Border>
														<ControlTemplate.Triggers>
															<Trigger Property="IsPressed" Value="True">
																<Setter Property="Background" TargetName="Border" Value="#FF404040"/>
																<Setter Property="BorderBrush" TargetName="Border" Value="#FF505050"/>
															</Trigger>
															<Trigger Property="IsEnabled" Value="False">
																<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
															</Trigger>
														</ControlTemplate.Triggers>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</RepeatButton.Style>
										</RepeatButton>
									</Viewbox>
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
		
		<Style TargetType="{x:Type ToolTip}">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="HasDropShadow" Value="True" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="Foreground" Value="#FF808080" />
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToolTip}">
						<Border x:Name="Border" 
								CornerRadius="6" 
								BorderBrush="#FF2A2A2A"
								Opacity="1" 
								BorderThickness="1">
							<Border x:Name="Background"
									BorderBrush="#FF424242"
									BorderThickness="1" 
									Background="#FF323232" 
									CornerRadius="4.5">
								<ContentPresenter Margin="4"
												  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
												  VerticalAlignment="Top"
												  TextBlock.FontSize="8pt"/>
							</Border>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		<Style TargetType="{x:Type CheckBox}">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="FocusVisualStyle">
				<Setter.Value>
					<Style>
						<Setter Property="Control.Template">
							<Setter.Value>
								<ControlTemplate>
									<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Setter.Value>
			</Setter>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="Padding" Value="2,0,0,0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<BulletDecorator Background="Transparent">
							<BulletDecorator.Bullet>
								<Border x:Name="Border" 
										CornerRadius="6" 
										BorderBrush="#FF1A1A1A" 
										Opacity="1" 
										BorderThickness="1">
									<Border x:Name="Background"
											BorderBrush="#FF3D3D3D"
											BorderThickness="1" 
											Background="#FF161616" 
											CornerRadius="4.5">
										<Ellipse x:Name="Dot" Stroke="#40076C" Height="10" Visibility="Hidden" Width="10" Margin="4">
											<Ellipse.Fill>
												<RadialGradientBrush GradientOrigin="0.5,0.1" RadiusX="0.5" RadiusY="0.5">
													<GradientStop Offset="0" Color="#FFC04BE0"/>
													<GradientStop Offset="1" Color="#FF8029A6"/>
												</RadialGradientBrush>
											</Ellipse.Fill>
										</Ellipse>
								</Border></Border>
							</BulletDecorator.Bullet>
							<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</BulletDecorator>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="Visibility" TargetName="Dot" Value="Visible"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="BorderBrush" TargetName="Border" Value="#FF2A2A2A"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Background" TargetName="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
								<Setter Property="Fill" TargetName="Dot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	<Style TargetType="{x:Type Expander}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" SnapsToDevicePixels="True">
						<DockPanel>
							<ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Panel.ZIndex="5">
								<ToggleButton.FocusVisualStyle>
									<Style>
										<Setter Property="Control.Template">
											<Setter.Value>
												<ControlTemplate/>
											</Setter.Value>
										</Setter>
									</Style>
								</ToggleButton.FocusVisualStyle>
								<ToggleButton.Style>
									<Style TargetType="{x:Type ToggleButton}">
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Border Padding="{TemplateBinding Padding}">
														<Grid Background="Transparent" SnapsToDevicePixels="False" Height="16">
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="19"/>
																<ColumnDefinition Width="*"/>
															</Grid.ColumnDefinitions>
															<Border x:Name="Bd" BorderBrush="#00000000" BorderThickness="0" Background="#FF2A2A2A" Height="Auto" SnapsToDevicePixels="True" Width="19" CornerRadius="4.5,0,0,4.5" Margin="0,8,0,-76">
																<Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FFA0A0A0" StrokeThickness="1.5" VerticalAlignment="Top" Margin="0,8,0,0"/>
															</Border>
															<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Stretch" Margin="-18.667,0,-17.617,-42.299" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5" OpacityMask="Black">
																<ContentPresenter.RenderTransform>
																	<TransformGroup>
																		<ScaleTransform/>
																		<SkewTransform/>
																		<RotateTransform Angle="-90"/>
																		<TranslateTransform/>
																	</TransformGroup>
																</ContentPresenter.RenderTransform>
															</ContentPresenter>
														</Grid>
													</Border>
													<ControlTemplate.Triggers>
														<Trigger Property="IsChecked" Value="True">
															<Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
														</Trigger>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Background" TargetName="Bd" Value="{DynamicResource ButtonBackgroundHover}"/>
														</Trigger>
														<Trigger Property="IsPressed" Value="True">
															<Setter Property="Background" TargetName="Bd" Value="{DynamicResource ButtonBackgroundPressed}"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</ToggleButton.Style>
							</ToggleButton>
							<ContentPresenter x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="True">
							<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Right">
							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
							<Setter Property="Style" TargetName="HeaderSite">
								<Setter.Value>
									<Style TargetType="{x:Type ToggleButton}">
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Border Padding="{TemplateBinding Padding}">
														<Grid Background="Transparent" SnapsToDevicePixels="True">
															<Grid.RowDefinitions>
																<RowDefinition Height="19"/>
																<RowDefinition Height="*"/>
															</Grid.RowDefinitions>
															<Border x:Name="Bd" BorderBrush="#FF525252" BorderThickness="1, 1, 0, 1" Background="#FF2A2A2A" Height="Auto" SnapsToDevicePixels="True" Width="19" CornerRadius="4,0,0,4" Margin="0,8,-1,-76">
																<Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FFA0A0A0" StrokeThickness="1.5" VerticalAlignment="Top" Margin="0,8,0,0">
																	<Path.LayoutTransform>
																		<RotateTransform Angle="-90"/>
																	</Path.LayoutTransform>
																</Path>
															</Border>
															<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Stretch" Margin="-18,0,-18,-48" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5" OpacityMask="Black">
																<ContentPresenter.RenderTransform>
																	<TransformGroup>
																		<ScaleTransform/>
																		<SkewTransform/>
																		<RotateTransform Angle="-90"/>
																		<TranslateTransform/>
																	</TransformGroup>
																</ContentPresenter.RenderTransform>
															</ContentPresenter>
														</Grid>
													</Border>
													<ControlTemplate.Triggers>
														<Trigger Property="IsChecked" Value="True">
															<Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
														</Trigger>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Background" TargetName="Bd">
																<Setter.Value>
																	<LinearGradientBrush StartPoint="0,0" EndPoint="1,0.5">
																		<GradientStop Offset="0" Color="#FF484848"/>
																		<GradientStop Offset="0.45" Color="#FF2D2D2D"/>		
																		<GradientStop Offset="0.45" Color="#FF2B2B2B"/>
																		<GradientStop Offset="1" Color="#FF2A2A2A"/>
																	</LinearGradientBrush>
																</Setter.Value>
															</Setter>
														</Trigger>
														<Trigger Property="IsPressed" Value="True">
															<Setter Property="Background" TargetName="Bd">
																<Setter.Value>
																	<LinearGradientBrush StartPoint="0,0" EndPoint="1,0.5">
																		<GradientStop Offset="0" Color="#FF646464"/>
																		<GradientStop Offset="0.45" Color="#FF323232"/>		
																		<GradientStop Offset="0.45" Color="#FF2B2B2B"/>
																		<GradientStop Offset="1" Color="#FF2A2A2A"/>
																	</LinearGradientBrush>
																</Setter.Value>
															</Setter>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Up">
							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
							<Setter Property="Style" TargetName="HeaderSite">
								<Setter.Value>
									<Style TargetType="{x:Type ToggleButton}">
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Border Padding="{TemplateBinding Padding}">
														<Grid Background="Transparent" SnapsToDevicePixels="False">
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="19"/>
																<ColumnDefinition Width="*"/>
															</Grid.ColumnDefinitions>
															<Microsoft_Windows_Themes:ClassicBorderDecorator x:Name="Bd" BorderBrush="#00000000" BorderThickness="1" BorderStyle="None" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Height="19" SnapsToDevicePixels="True" Width="19">
																<Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="{TemplateBinding Foreground}" StrokeThickness="1.5" VerticalAlignment="Center">
																	<Path.LayoutTransform>
																		<RotateTransform Angle="180"/>
																	</Path.LayoutTransform>
																</Path>
															</Microsoft_Windows_Themes:ClassicBorderDecorator>
															<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
														</Grid>
													</Border>
													<ControlTemplate.Triggers>
														<Trigger Property="IsChecked" Value="True">
															<Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
														</Trigger>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="BorderStyle" TargetName="Bd" Value="ThinRaised"/>
														</Trigger>
														<Trigger Property="IsPressed" Value="True">
															<Setter Property="BorderStyle" TargetName="Bd" Value="ThinPressed"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Left">
							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
							<Setter Property="Style" TargetName="HeaderSite">
								<Setter.Value>
									<Style TargetType="{x:Type ToggleButton}">
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Border Padding="{TemplateBinding Padding}">
														<Grid Background="Transparent" SnapsToDevicePixels="False">
															<Grid.RowDefinitions>
																<RowDefinition Height="19"/>
																<RowDefinition Height="*"/>
															</Grid.RowDefinitions>
															<Microsoft_Windows_Themes:ClassicBorderDecorator x:Name="Bd" BorderBrush="#00000000" BorderThickness="1" BorderStyle="None" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Height="19" SnapsToDevicePixels="True" Width="19">
																<Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="{TemplateBinding Foreground}" StrokeThickness="1.5" VerticalAlignment="Center">
																	<Path.LayoutTransform>
																		<RotateTransform Angle="90"/>
																	</Path.LayoutTransform>
																</Path>
															</Microsoft_Windows_Themes:ClassicBorderDecorator>
															<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
														</Grid>
													</Border>
													<ControlTemplate.Triggers>
														<Trigger Property="IsChecked" Value="True">
															<Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
														</Trigger>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="BorderStyle" TargetName="Bd" Value="ThinRaised"/>
														</Trigger>
														<Trigger Property="IsPressed" Value="True">
															<Setter Property="BorderStyle" TargetName="Bd" Value="ThinPressed"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="HeaderSite" Value="0"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ComboBox}">
		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle Margin="4,4,21,4" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="#A0A0A0"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="2,1"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="ItemsPanel" Value="{StaticResource ItemsPanelTemplate_Performance}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
						<Grid>
							<Border x:Name="Border" 
								CornerRadius="6" 
								BorderBrush="#FF1A1A1A" 
								Opacity="1" 
								BorderThickness="1">
							<Border x:Name="Background"
									BorderBrush="#FF3D3D3D"
									BorderThickness="1" 
									Background="#FF161616" 
									CornerRadius="4.5">
								<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
									<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Border}" CornerRadius="4.5">
										<Border x:Name="DropDownBorder" 
												CornerRadius="6" 
												BorderBrush="#FF2A2A2A"
												Opacity="1" 
												BorderThickness="1">
							<Border 
									BorderBrush="#FF424242"
									BorderThickness="1" 
									Background="#FF323232" 
									CornerRadius="4.5">
											<ScrollViewer x:Name="DropDownScrollViewer">
												<Grid RenderOptions.ClearTypeHint="Enabled">
													<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
														<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
													</Canvas>
													<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
												</Grid>
											</ScrollViewer>
										</Border>
										</Border>
									</Microsoft_Windows_Themes:SystemDropShadowChrome>
								</Popup>
							</Border>
							</Border>
							<DockPanel Margin="2">
								<FrameworkElement DockPanel.Dock="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
								<Border x:Name="SelectedItemBorder" Margin="{TemplateBinding Padding}">
									<ContentPresenter Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								</Border>
							</DockPanel>
							<ToggleButton ClickMode="Press" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="2" MinWidth="0" MinHeight="0" Width="Auto">
								<ToggleButton.Style>
									<Style TargetType="{x:Type ToggleButton}">
										<Setter Property="MinWidth" Value="0"/>
										<Setter Property="MinHeight" Value="0"/>
										<Setter Property="Width" Value="Auto"/>
										<Setter Property="Height" Value="Auto"/>
										<Setter Property="Background" Value="Transparent"/>
										<Setter Property="BorderBrush" Value="#00000000"/>
										<Setter Property="BorderThickness" Value="2"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<DockPanel Background="{TemplateBinding Background}" LastChildFill="False" SnapsToDevicePixels="True">
														<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" DockPanel.Dock="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
															<Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FFA0A0A0" StrokeThickness="1.5" VerticalAlignment="Top" Margin="0,4,2,0" />
														</Border>
													</DockPanel>
													<ControlTemplate.Triggers>
														<Trigger Property="IsChecked" Value="True">
															<Setter Property="Stroke" TargetName="arrow" Value="#FF5A5A5A"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
										<Style.Triggers>
											<Trigger Property="IsEnabled" Value="False">
												<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
											</Trigger>
										</Style.Triggers>
									</Style>
								</ToggleButton.Style>
							</ToggleButton>
						</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelectionBoxHighlighted" Value="True"/>
								<Condition Property="IsDropDownOpen" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
						</MultiTrigger>
						<Trigger Property="IsSelectionBoxHighlighted" Value="True"/>
						<Trigger Property="HasItems" Value="False">
							<Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							<Setter Property="Background" TargetName="Background" Value="#FF2A2A2A"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
						</Trigger>
						<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
							<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
							<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
						</Trigger>
						<Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
							<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
							<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEditable" Value="True">
				<Setter Property="IsTabStop" Value="False"/>
				<Setter Property="Padding" Value="1"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ComboBox}">
							<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
								<Grid>
									<Microsoft_Windows_Themes:ClassicBorderDecorator x:Name="Border" BorderBrush="#00000000" BorderThickness="2" BorderStyle="Sunken" Background="{TemplateBinding Background}">
										<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
											<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Border}">
												<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
													<ScrollViewer x:Name="DropDownScrollViewer">
														<Grid RenderOptions.ClearTypeHint="Enabled">
															<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
																<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
															</Canvas>
															<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
														</Grid>
													</ScrollViewer>
												</Border>
											</Microsoft_Windows_Themes:SystemDropShadowChrome>
										</Popup>
									</Microsoft_Windows_Themes:ClassicBorderDecorator>
									<ToggleButton ClickMode="Press" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="2" MinWidth="0" MinHeight="0" Width="Auto">
										<ToggleButton.Style>
											<Style TargetType="{x:Type ToggleButton}">
												<Setter Property="MinWidth" Value="0"/>
												<Setter Property="MinHeight" Value="0"/>
												<Setter Property="Width" Value="Auto"/>
												<Setter Property="Height" Value="Auto"/>
												<Setter Property="Background" Value="Transparent"/>
												<Setter Property="BorderBrush" Value="#00000000"/>
												<Setter Property="BorderThickness" Value="2"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type ToggleButton}">
															<DockPanel Background="{TemplateBinding Background}" LastChildFill="False" SnapsToDevicePixels="True">
																<Microsoft_Windows_Themes:ClassicBorderDecorator x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderStyle="AltRaised" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" DockPanel.Dock="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
																	<Path Data="M0,0L3.5,4 7,0z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
																</Microsoft_Windows_Themes:ClassicBorderDecorator>
															</DockPanel>
															<ControlTemplate.Triggers>
																<Trigger Property="IsChecked" Value="True">
																	<Setter Property="BorderStyle" TargetName="Border" Value="AltPressed"/>
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
												<Style.Triggers>
													<Trigger Property="IsEnabled" Value="False">
														<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
													</Trigger>
												</Style.Triggers>
											</Style>
										</ToggleButton.Style>
									</ToggleButton>
									<DockPanel Margin="2">
										<FrameworkElement DockPanel.Dock="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
										<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
											<TextBox.Style>
												<Style TargetType="{x:Type TextBox}">
													<Setter Property="OverridesDefaultStyle" Value="True"/>
													<Setter Property="AllowDrop" Value="True"/>
													<Setter Property="MinWidth" Value="0"/>
													<Setter Property="MinHeight" Value="0"/>
													<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
													<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
													<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type TextBox}">
																<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</TextBox.Style>
										</TextBox>
									</DockPanel>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="HasItems" Value="False">
									<Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
								</Trigger>
								<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
									<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
									<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
									<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
								</Trigger>
								<Trigger Property="IsGrouping" Value="True">
									<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
								</Trigger>
								<Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
									<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
									<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type GroupBox}">
		<Setter Property="BorderBrush" Value="#00000000"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<Grid SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="6"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="6"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="6"/>
						</Grid.RowDefinitions>
						<Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0" Grid.Row="1" Grid.RowSpan="3"/>
						<Border x:Name="Header" Grid.Column="1" Padding="3,0" Grid.Row="0" Grid.RowSpan="2">
							<ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
						<ContentPresenter Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" CornerRadius="4.5">
							<Border.OpacityMask>
								<MultiBinding ConverterParameter="7" UpdateSourceTrigger="Default">
									<MultiBinding.Converter>
										<BorderGapMaskConverter/>
									</MultiBinding.Converter>
									<Binding ElementName="Header" Path="ActualWidth"/>
									<Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
									<Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
								</MultiBinding>
							</Border.OpacityMask>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
		
	<!-- END CONTROL STYLES -->
	<Style TargetType="{x:Type Microsoft_Windows_Controls_Chromes:ButtonChrome}">
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="BorderBrush" Value="#FF707070"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Microsoft_Windows_Controls_Chromes:ButtonChrome}">
					<Grid>
						<Border x:Name="OuterBorder" 
								CornerRadius="6" 
								BorderBrush="#FF1A1A1A" 
								Opacity="1" 
								BorderThickness="1">
							<Border x:Name="InnerBorder"
									BorderBrush="#FF3D3D3D"
									BorderThickness="1" 
									Background="#FF161616" 
									CornerRadius="4.5"/>
						</Border>
						<Border x:Name="MouseOverVisual" 
								CornerRadius="6" 
								BorderBrush="#FF1A1A1A" 
								Opacity="1" 
								BorderThickness="1">
							<Border x:Name="MouseOverInnerVisual"
									BorderBrush="#FF3D3D3D"
									BorderThickness="1" 
									Background="#FF161616" 
									CornerRadius="4.5"/>
						</Border>
						<Border x:Name="PressedVisual" 
								CornerRadius="6" 
								BorderBrush="#FF1A1A1A" 
								Opacity="1" 
								BorderThickness="1">
							<Border x:Name="PressedInnerVisual"
									BorderBrush="#FF3D3D3D"
									BorderThickness="1" 
									Background="#FF161616" 
									CornerRadius="4.5"/>
						</Border>
						<Border x:Name="FocusVisual" 
								CornerRadius="6" 
								BorderBrush="#FF1A1A1A" 
								Opacity="1" 
								BorderThickness="1">
							<Border x:Name="FocusInnerVisual"
									BorderBrush="#FF3D3D3D"
									BorderThickness="1" 
									Background="#FF161616" 
									CornerRadius="4.5"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" TargetName="InnerBorder" Value="#2A2A2A"/>
						</Trigger>
						<Trigger Property="RenderEnabled" Value="False">
							<Setter Property="Background" TargetName="InnerBorder" Value="#2A2A2A"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="RenderEnabled" Value="False"/>
								<Condition Property="RenderChecked" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush" TargetName="OuterBorder" Value="#FFADB2B5"/>
							<Setter Property="BorderBrush" TargetName="InnerBorder">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
										<GradientStop Color="#FAFFFFFF" Offset="0"/>
										<GradientStop Color="#85FFFFFF" Offset="1"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="Background" TargetName="OuterBorder" Value="#FFF4F4F4"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="RenderEnabled" Value="True"/>
								<Condition Property="RenderPressed" Value="True"/>
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PressedVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedVisual">
											<LinearDoubleKeyFrame KeyTime="0:0:0.05" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PressedVisual">
											<DiscreteObjectKeyFrame KeyTime="0:0:0.115">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedVisual">
											<LinearDoubleKeyFrame KeyTime="0:0:0.115" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="RenderEnabled" Value="True"/>
								<Condition Property="RenderChecked" Value="False"/>
								<Condition Property="RenderMouseOver" Value="True"/>
								<Condition Property="RenderPressed" Value="False"/>
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MouseOverVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual">
											<LinearDoubleKeyFrame KeyTime="0:0:0.115" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MouseOverVisual">
											<DiscreteObjectKeyFrame KeyTime="0:0:0.15">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual">
											<LinearDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="RenderEnabled" Value="True"/>
								<Condition Property="RenderChecked" Value="True"/>
								<Condition Property="RenderMouseOver" Value="False"/>
								<Condition Property="RenderPressed" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush" TargetName="OuterBorder" Value="#FF2C628B"/>
							<Setter Property="BorderBrush" TargetName="InnerBorder">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
										<GradientStop Color="#FAFFFFFF" Offset="0"/>
										<GradientStop Color="#85FFFFFF" Offset="1"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="Background" TargetName="OuterBorder">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
										<GradientStop Color="#FFC2E4F6" Offset="0.5"/>
										<GradientStop Color="#FFABDAF3" Offset="0.5"/>
										<GradientStop Color="#FF90CBEB" Offset="1"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="RenderFocused" Value="True"/>
								<Condition Property="RenderEnabled" Value="True"/>
								<Condition Property="RenderPressed" Value="False"/>
								<Condition Property="RenderMouseOver" Value="False"/>
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual">
											<LinearDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisual">
											<DiscreteObjectKeyFrame KeyTime="0:0:0.115">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual">
											<LinearDoubleKeyFrame KeyTime="0:0:0.115" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="RenderNormal" Value="False"/>
								<Condition Property="RenderChecked" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush" TargetName="OuterBorder" Value="Transparent"/>
							<Setter Property="BorderBrush" TargetName="InnerBorder" Value="{x:Null}"/>
							<Setter Property="Background" TargetName="OuterBorder" Value="Transparent"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ToolBar}">
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="#FFE2E0DB" Offset="0"/>
					<GradientStop Color="#FFEAE8E4" Offset="0.5"/>
					<GradientStop Color="#FFD5D2CA" Offset="0.9"/>
					<GradientStop Color="#FFDBD8D1" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToolBar}">
					<Grid x:Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="True">
						<Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
							<ToggleButton x:Name="OverflowButton" ClickMode="Press" FocusVisualStyle="{x:Null}" IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{TemplateBinding HasOverflowItems}" Visibility="Collapsed">
								<ToggleButton.Style>
									<Style TargetType="{x:Type ToggleButton}">
										<Setter Property="Background">
											<Setter.Value>
												<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
													<GradientStop Color="#FFE6E6E6" Offset="0"/>
													<GradientStop Color="#FFD2D2D2" Offset="0.5"/>
													<GradientStop Color="Gray" Offset="1"/>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
										<Setter Property="MinHeight" Value="0"/>
										<Setter Property="MinWidth" Value="0"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,3,3,0" SnapsToDevicePixels="True">
														<Canvas HorizontalAlignment="Right" Height="7" Margin="7,2,2,2" SnapsToDevicePixels="True" VerticalAlignment="Bottom" Width="6">
															<Path Data="M1,1.5L6,1.5" Stroke="White"/>
															<Path Data="M0,0.5L5,0.5" Stroke="{TemplateBinding Foreground}"/>
															<Path Data="M0.5,4L6.5,4 3.5,7z" Fill="White"/>
															<Path Data="M-0.5,3L5.5,3 2.5,6z" Fill="{TemplateBinding Foreground}"/>
														</Canvas>
													</Border>
													<ControlTemplate.Triggers>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Background" TargetName="Bd" Value="#FFB6BDD2"/>
														</Trigger>
														<Trigger Property="IsKeyboardFocused" Value="True">
															<Setter Property="Background" TargetName="Bd" Value="#FFB6BDD2"/>
														</Trigger>
														<Trigger Property="IsEnabled" Value="False">
															<Setter Property="Foreground" Value="#FFA0A0A0"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
										<Style.Triggers>
											<DataTrigger Binding="{Binding}" Value="true">
												<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</ToggleButton.Style>
							</ToggleButton>
							<Popup x:Name="OverflowPopup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="False">
								<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
									<Border x:Name="ToolBarSubMenuBorder" BorderBrush="#FF666666" BorderThickness="1" Background="#FFF9F8F7" RenderOptions.ClearTypeHint="Enabled">
										<ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Cycle" FocusVisualStyle="{x:Null}" Focusable="True" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200"/>
									</Border>
								</Microsoft_Windows_Themes:SystemDropShadowChrome>
							</Popup>
						</Grid>
						<Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
							<Border.Style>
								<Style TargetType="{x:Type Border}">
									<Setter Property="Margin" Value="0,0,11,0"/>
									<Setter Property="CornerRadius" Value="3"/>
									<Style.Triggers>
										<DataTrigger Binding="{Binding}" Value="true">
											<Setter Property="CornerRadius" Value="0"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Border.Style>
							<DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
								<Thumb x:Name="ToolBarThumb" Margin="-3,-1,0,0" Padding="6,5,1,6" Width="10" Visibility="Collapsed">
									<Thumb.Style>
										<Style TargetType="{x:Type Thumb}">
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type Thumb}">
														<Border Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
															<Rectangle>
																<Rectangle.Fill>
																	<DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" Viewport="0,0,4,4" ViewportUnits="Absolute" ViewboxUnits="Absolute">
																		<DrawingBrush.Drawing>
																			<DrawingGroup>
																				<GeometryDrawing Brush="White" Geometry="M1,1L1,3 3,3 3,1z"/>
																				<GeometryDrawing Brush="#FFA0A0A0" Geometry="M0,0L0,2 2,2 2,0z"/>
																			</DrawingGroup>
																		</DrawingBrush.Drawing>
																	</DrawingBrush>
																</Rectangle.Fill>
															</Rectangle>
														</Border>
														<ControlTemplate.Triggers>
															<Trigger Property="IsMouseOver" Value="True">
																<Setter Property="Cursor" Value="SizeAll"/>
															</Trigger>
														</ControlTemplate.Triggers>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</Thumb.Style>
								</Thumb>
								<ContentPresenter x:Name="ToolBarHeader" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
								<ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="True" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</DockPanel>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsOverflowOpen" Value="True">
							<Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="False"/>
						</Trigger>
						<Trigger Property="Header" Value="{x:Null}">
							<Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="ToolBarTray.IsLocked" Value="True">
							<Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="True">
							<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
							<Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="True"/>
							<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
						</Trigger>
						<Trigger Property="Orientation" Value="Vertical">
							<Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
							<Setter Property="Style" TargetName="OverflowButton">
								<Setter.Value>
									<Style TargetType="{x:Type ToggleButton}">
										<Setter Property="Background">
											<Setter.Value>
												<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
													<GradientStop Color="#FFE6E6E6" Offset="0"/>
													<GradientStop Color="#FFD2D2D2" Offset="0.5"/>
													<GradientStop Color="Gray" Offset="1"/>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
										<Setter Property="MinHeight" Value="0"/>
										<Setter Property="MinWidth" Value="0"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3" SnapsToDevicePixels="True">
														<Canvas HorizontalAlignment="Right" Height="6" Margin="2,7,2,2" SnapsToDevicePixels="True" VerticalAlignment="Bottom" Width="7">
															<Path Data="M1.5,1L1.5,6" Stroke="White"/>
															<Path Data="M0.5,0L0.5,5" Stroke="{TemplateBinding Foreground}"/>
															<Path Data="M3.5,0.5L7,3.5 4,6.5z" Fill="White"/>
															<Path Data="M3,-0.5L6,2.5 3,5.5z" Fill="{TemplateBinding Foreground}"/>
														</Canvas>
													</Border>
													<ControlTemplate.Triggers>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Background" TargetName="Bd" Value="#FFB6BDD2"/>
														</Trigger>
														<Trigger Property="IsKeyboardFocused" Value="True">
															<Setter Property="Background" TargetName="Bd" Value="#FFB6BDD2"/>
														</Trigger>
														<Trigger Property="IsEnabled" Value="False">
															<Setter Property="Foreground" Value="#FFA0A0A0"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
										<Style.Triggers>
											<DataTrigger Binding="{Binding}" Value="true">
												<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Setter.Value>
							</Setter>
							<Setter Property="Height" TargetName="ToolBarThumb" Value="10"/>
							<Setter Property="Width" TargetName="ToolBarThumb" Value="Auto"/>
							<Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0"/>
							<Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1"/>
							<Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
							<Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
							<Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top"/>
							<Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
							<Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
							<Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
							<Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
							<Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
							<Setter Property="Background">
								<Setter.Value>
									<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
										<GradientStop Color="#FFE2E0DB" Offset="0"/>
										<GradientStop Color="#FFEAE8E4" Offset="0.5"/>
										<GradientStop Color="#FFD5D2CA" Offset="0.9"/>
										<GradientStop Color="#FFDBD8D1" Offset="1"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding}" Value="true">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type Separator}">
		<Setter Property="MinHeight" Value="2"/>
		<Setter Property="MinWidth" Value="2"/>
		<Setter Property="Margin" Value="4,2"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<StackPanel Width="2" Orientation="Horizontal">
					<Rectangle Width="1" Height="{TemplateBinding Height}">
						<Rectangle.Fill>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="#FF161616" Offset="0"/>
								<GradientStop Color="#00161616" Offset="1"/>
							</LinearGradientBrush>
						</Rectangle.Fill>
					</Rectangle>
					<Rectangle Width="1" Height="{TemplateBinding Height}">
						<Rectangle.Fill>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="#FF505050" Offset="1"/>
								<GradientStop Color="#00505050" Offset="0"/>
							</LinearGradientBrush>
						</Rectangle.Fill>
					</Rectangle>
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>